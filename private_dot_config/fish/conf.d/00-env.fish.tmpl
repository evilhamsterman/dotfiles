###############################
# Setup environment variables #
###############################

# Set XDG values if they aren't set
set -q XDG_CONFIG_HOME; or set XDG_CONFIG_HOME ~/.config

# Update dotfiles if it's been more than a day
if test -n "$__last_chezmoi_update"
    if math (date %Y%j) - $__last_chezmoi_update > 1
        cu
    end
else
    cu
end


# Load Starship Prompt if available
set starship_installed false
if type -q starship
    starship init fish | source
end

# Load zoxide if available
if type -q zoxide
    zoxide init fish --cmd cd| source
end

# Disable fish greeting
set fish_greeting

# Add $HOME/.local/bin to PATH and make sure it exists
# if test
set -l local_bin $HOME/.local/bin
fish_add_path $local_bin
if not test -d $local_bin
    mkdir -p $local_bin
end

# Setup Go paths
if type -q go
    set -gx GOPATH (go env GOPATH)
    fish_add_path $GOPATH/bin
end

# Set editor based on local or remote
if type -q code
    set -gx EDITOR code --wait
else
    set -gx EDITOR vim
end

# Kubernetes shortcuts
if type -q kubectl
    alias k=kubectl
    alias kshell="kubectl run shell --rm -it --image alpine -- /bin/sh"
end

if type -q kubie
    alias kns="kubie ns"
    alias kctx="kubie ctx"
end

# Add rancher desktop binaries
if test -d $HOME/.rd
    fish_add_path -aP $HOME/.rd/bin
end

# Setup Virtualfish project directory
set -gx PROJECT_HOME $HOME/development
if not test -d $PROJECT_HOME
    mkdir -p $PROJECT_HOME
end

# Use direnv for loading .env files
if type -q direnv
    direnv hook fish | source
end

{{/* Linux stuff */}}
{{if eq .chezmoi.os "linux"}}
# Add snap to path if it exists
if test -d /snap/bin
    fish_add_path /snap/bin
end
    {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
# Connect to Windows ssh-agent if running in WSL
set -gx SSH_AUTH_SOCK $HOME/.ssh/agent.sock

if not test -d $HOME/.ssh
    mkdir -p -m 700 $HOME/.ssh
end
set -gx SSH_AGENT_PID (fuser $SSH_AUTH_SOCK 2>/dev/null)

if type -q socat; and not test -S $SSH_AUTH_SOCK;
    setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork &
end
    {{ else if not .remote }}
# If we are in a Linux desktop use the ssh-agent for SSH
set -gx SSH_AUTH_SOCK "$XDG_RUNTIME_DIR/ssh-agent.socket"
    {{ end }}
{{ end }}

{{/* MacOS Stuff */}}
{{ if eq .chezmoi.os "darwin" }}
# Add homebrew sbin
fish_add_path /usr/local/sbin

# Source gcloud tools
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.fish.inc

# Add local Python site to PATH
fish_add_path (python3 -m site --user-base)/bin

{{ end }}
